{"name": "test_registration", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/app-root/app-global-layout/div/div/div/app-panel-layout/div/div/div/div[1]/nav/a[4]\"}\n  (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff65e0b3d85+79397]\n\tGetHandleVerifier [0x0x7ff65e0b3de0+79488]\n\t(No symbol) [0x0x7ff65de5c0fa]\n\t(No symbol) [0x0x7ff65deb2fd6]\n\t(No symbol) [0x0x7ff65deb328c]\n\t(No symbol) [0x0x7ff65df06537]\n\t(No symbol) [0x0x7ff65dedb1df]\n\t(No symbol) [0x0x7ff65df03344]\n\t(No symbol) [0x0x7ff65dedaf73]\n\t(No symbol) [0x0x7ff65dea41b1]\n\t(No symbol) [0x0x7ff65dea4f43]\n\tGetHandleVerifier [0x0x7ff65e37e1ed+3005069]\n\tGetHandleVerifier [0x0x7ff65e37831d+2980797]\n\tGetHandleVerifier [0x0x7ff65e397e0d+3110573]\n\tGetHandleVerifier [0x0x7ff65e0cd6de+184190]\n\tGetHandleVerifier [0x0x7ff65e0d516f+215567]\n\tGetHandleVerifier [0x0x7ff65e0bc974+115220]\n\tGetHandleVerifier [0x0x7ff65e0bcb29+115657]\n\tGetHandleVerifier [0x0x7ff65e0a3268+11016]\n\tBaseThreadInitThunk [0x0x7fffb9d3e8d7+23]\n\tRtlUserThreadStart [0x0x7fffbacdc34c+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"784850053ccf89bb26e471d4460f6633\")>\nopen_start_page = <function open_start_page.<locals>._open_start_page at 0x000001ACC3D865C0>, sign_in = <function sign_in.<locals>._sign_in at 0x000001ACC3D86660>\nregistration_in_log_in = <function registration_in_log_in.<locals>._registration_in_log_in at 0x000001ACC3D86520>\nregistration = <function registration.<locals>._registration at 0x000001ACC3D86700>\ncheck_registration_done = <function check_registration_done.<locals>._check_registration_done at 0x000001ACC3D84AE0>\n\n    @allure.feature(\"Помилка при регістрації\")\n    def test_registration(driver, open_start_page, sign_in, registration_in_log_in, registration, check_registration_done):\n    \topen_start_page()\n    \tsign_in()\n    \tregistration_in_log_in()\n    \tregistration(\"Oleksandr\", \"Hlushko\", \"Hlushko131@gmail.com\", \"111qqqAAA\", \"111qqqAAA\")\n>   \tassert check_registration_done(), \"No registration\"\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_registration.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:86: in _check_registration_done\n    log_out = garage_page.log_out()\n              ^^^^^^^^^^^^^^^^^^^^^\n..\\pages\\garage_page.py:9: in log_out\n    return self.driver.find_element(By.XPATH, \"/html/body/app-root/app-global-layout/div/div/div/app-panel-layout/div/div/div/div[1]/nav/a[4]\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001ACC3D7D100>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff65e0a3268+11016]\\\\n\\\\tBaseThreadInitThunk [0x0x7fffb9d3e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7fffbacdc34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/app-root/app-global-layout/div/div/div/app-panel-layout/div/div/div/div[1]/nav/a[4]\"}\nE         (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff65e0b3d85+79397]\nE       \tGetHandleVerifier [0x0x7ff65e0b3de0+79488]\nE       \t(No symbol) [0x0x7ff65de5c0fa]\nE       \t(No symbol) [0x0x7ff65deb2fd6]\nE       \t(No symbol) [0x0x7ff65deb328c]\nE       \t(No symbol) [0x0x7ff65df06537]\nE       \t(No symbol) [0x0x7ff65dedb1df]\nE       \t(No symbol) [0x0x7ff65df03344]\nE       \t(No symbol) [0x0x7ff65dedaf73]\nE       \t(No symbol) [0x0x7ff65dea41b1]\nE       \t(No symbol) [0x0x7ff65dea4f43]\nE       \tGetHandleVerifier [0x0x7ff65e37e1ed+3005069]\nE       \tGetHandleVerifier [0x0x7ff65e37831d+2980797]\nE       \tGetHandleVerifier [0x0x7ff65e397e0d+3110573]\nE       \tGetHandleVerifier [0x0x7ff65e0cd6de+184190]\nE       \tGetHandleVerifier [0x0x7ff65e0d516f+215567]\nE       \tGetHandleVerifier [0x0x7ff65e0bc974+115220]\nE       \tGetHandleVerifier [0x0x7ff65e0bcb29+115657]\nE       \tGetHandleVerifier [0x0x7ff65e0a3268+11016]\nE       \tBaseThreadInitThunk [0x0x7fffb9d3e8d7+23]\nE       \tRtlUserThreadStart [0x0x7fffbacdc34c+44]\n\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1756626940707, "stop": 1756626952938, "uuid": "1d6bbfe7-0bef-40c0-9a79-ac69b3e844d6", "historyId": "b1c42190297b277dbb50653a5235de90", "testCaseId": "b1c42190297b277dbb50653a5235de90", "fullName": "test_registration#test_registration", "labels": [{"name": "feature", "value": "Помилка при регістрації"}, {"name": "suite", "value": "test_registration"}, {"name": "host", "value": "DESKTOP-N08PBDF"}, {"name": "thread", "value": "11524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_registration"}], "titlePath": ["test_registration.py"]}